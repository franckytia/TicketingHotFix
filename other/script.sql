create database gestion_avion;
\c gestion_avion;


CREATE TABLE avion (
    id SERIAL NOT NULL,
    modele VARCHAR(100) NOT NULL,
    capacite INTEGER NOT NULL,
    date_fabrication DATE NOT NULL,
    CONSTRAINT avion_pkey PRIMARY KEY (id)
);

CREATE TABLE categorie_age (
    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    age_max INTEGER,
    age_min INTEGER,
    description VARCHAR(255),
    coefficient DOUBLE PRECISION,
    prix_billet DOUBLE PRECISION,
    CONSTRAINT categorie_age_pkey PRIMARY KEY (id)
);

CREATE TABLE reservation_detail (
    id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    id_reservation INTEGER NOT NULL,
    id_type_siege INTEGER NOT NULL,
    nom_passager VARCHAR(100) NOT NULL,
    passport VARCHAR(50) NOT NULL,
    remarque VARCHAR(255),
    taille DOUBLE PRECISION,
    CONSTRAINT reservation_detail_pkey PRIMARY KEY (id)
);

CREATE TABLE typesiege (
    id SERIAL NOT NULL,
    nom VARCHAR(50) NOT NULL,
    coefficient_prix DOUBLE PRECISION NOT NULL,
    CONSTRAINT typesiege_pkey PRIMARY KEY (id),
    CONSTRAINT typesiege_nom_key UNIQUE (nom)
);

CREATE TABLE utilisateur (
    id SERIAL NOT NULL,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    email VARCHAR(150) NOT NULL,
    "password" VARCHAR(255) NOT NULL,
    "role" VARCHAR(50) NOT NULL,
    CONSTRAINT utilisateur_pkey PRIMARY KEY (id),
    CONSTRAINT utilisateur_email_key UNIQUE (email)
);

ALTER TABLE utilisateur ADD CONSTRAINT utilisateur_role_check CHECK ("role"::text = ANY (ARRAY['admin'::character varying, 'client'::character varying]::text[]));

CREATE TABLE ville (
    id SERIAL NOT NULL,
    nom VARCHAR(100) NOT NULL,
    CONSTRAINT ville_pkey PRIMARY KEY (id),
    CONSTRAINT ville_nom_key UNIQUE (nom)
);

CREATE TABLE vol (
    id SERIAL NOT NULL,
    numero_vol VARCHAR(50) NOT NULL,
    id_avion INTEGER,
    id_ville_depart INTEGER,
    id_ville_arrivee INTEGER,
    date_depart TIMESTAMP NOT NULL,
    date_arrivee TIMESTAMP NOT NULL,
    prix_base NUMERIC(10,2) NOT NULL,
    id_cat_age INTEGER,
    CONSTRAINT vol_pkey PRIMARY KEY (id),
    CONSTRAINT vol_numero_vol_key UNIQUE (numero_vol)
);

CREATE TABLE promotion (
    id SERIAL NOT NULL,
    id_vol INTEGER,
    pourcentage_reduction NUMERIC(5,2) NOT NULL,
    nombre_places_promo INTEGER NOT NULL,
    id_type_siege INTEGER,
    CONSTRAINT promotion_pkey PRIMARY KEY (id)
);

CREATE TABLE reservation (
    id SERIAL NOT NULL,
    id_vol INTEGER,
    au_nom VARCHAR(200) NOT NULL,
    cin INTEGER NOT NULL,
    date_reservation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    statut VARCHAR DEFAULT 'En attente'::character varying,
    prix_total DOUBLE PRECISION,
    CONSTRAINT reservation_pkey PRIMARY KEY (id)
);

ALTER TABLE reservation ADD CONSTRAINT reservation_statut_check CHECK (statut::text = ANY (ARRAY['Confirmé'::character varying, 'Annulé'::character varying, 'En attente'::character varying]::text[]));

CREATE TABLE reservation_personne (
    id SERIAL NOT NULL,
    id_reservation INTEGER,
    id_categorie_peronne INTEGER,
    total INTEGER,
    CONSTRAINT reservation_personne_pkey PRIMARY KEY (id)
);

ALTER TABLE promotion ADD CONSTRAINT fk_promotion_promotion FOREIGN KEY (id_type_siege) REFERENCES typesiege(id);

ALTER TABLE promotion ADD CONSTRAINT promotion_id_vol_fkey FOREIGN KEY (id_vol) REFERENCES vol(id) ON DELETE CASCADE;

ALTER TABLE reservation ADD CONSTRAINT reservation_id_vol_fkey FOREIGN KEY (id_vol) REFERENCES vol(id) ON DELETE CASCADE;

ALTER TABLE reservation_personne ADD CONSTRAINT reservation_personne_id_reservation_fkey FOREIGN KEY (id_reservation) REFERENCES reservation(id) ON DELETE CASCADE;

ALTER TABLE reservation_personne ADD CONSTRAINT reservation_personne_id_categorie_peronne_fkey FOREIGN KEY (id_categorie_peronne) REFERENCES categorie_age(id) ON DELETE CASCADE;

ALTER TABLE vol ADD CONSTRAINT vol_id_avion_fkey FOREIGN KEY (id_avion) REFERENCES avion(id) ON DELETE CASCADE;

ALTER TABLE vol ADD CONSTRAINT vol_id_ville_depart_fkey FOREIGN KEY (id_ville_depart) REFERENCES ville(id) ON DELETE CASCADE;

ALTER TABLE vol ADD CONSTRAINT vol_id_ville_arrivee_fkey FOREIGN KEY (id_ville_arrivee) REFERENCES ville(id) ON DELETE CASCADE;

ALTER TABLE vol ADD CONSTRAINT fk_vol_vol FOREIGN KEY (id_cat_age) REFERENCES categorie_age(id);